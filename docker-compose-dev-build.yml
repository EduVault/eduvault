version: '3.7'
services:
  app:
    container_name: app
    build:
      context: ./app
      target: prod-stage
      dockerfile: Dockerfile_prod
    volumes:
      - dist-share:/app/dist
      - './app:/app'
      - '/app/node_modules'
    stdin_open: true
    env_file: 
      ./.env
    environment:
      - NODE_ENV=production
  example:
    container_name: example
    build:
      context: ./example
      target: prod-stage
      dockerfile: Dockerfile_prod
    volumes:
      - example-dist-share:/app/dist
      - './example:/example'
      - '/example/node_modules'
    stdin_open: true
    env_file:
      - ./.env        
    environment:
      - NODE_ENV=production
  api:
    container_name: api
    build:
      context: ./api
      target: prod-stage
      dockerfile: Dockerfile_prod
    ports:
      - '3003:3003'
    volumes:
      - './api:/api'
      - '/api/node_modules'
    env_file: 
      ./.env
    environment:
      - NODE_ENV=production

  home-page:
    container_name: home-page
    build:
      context: ./home-page
      target: prod-stage
      dockerfile: Dockerfile_prod
    volumes:
      - './home-page:/home-page'
      - '/home-page/node_modules'
    ports:
      - '8083:8083'
    env_file: 
      ./.env      
    environment:
      - NODE_ENV=production

  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./deploy/nginx/dev-build:/etc/nginx/conf.d
      - dist-share:/var/www/app-dist
      - example-dist-share:/var/www/example-dist
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - app
      - api
      - example
      - home-page
volumes:
  dist-share:
    driver: local
  example-dist-share:
    driver: local
