version: '3.7'
services:
  app:
    container_name: app
    build:
      context: ./app
      target: prod-stage
      dockerfile: dockerfile_prod
    volumes:
      - dist-share:/app/dist
    stdin_open: true
    env_file:
      - ../.env
    environment:
      - NODE_ENV=production
  api:
    container_name: api
    build:
      context: ./api
      target: prod-stage
      dockerfile: dockerfile_prod
    env_file:
      - ../.env      
    ports:
      - '3003:3003'

    environment:
      - NODE_ENV=production
  example:
    container_name: example
    build:
      context: ./example
      target: prod-stage
      dockerfile: dockerfile_prod
    volumes:
      - example-dist-share:/app/dist
      - './example:/example'
      - '/example/node_modules'
    stdin_open: true
    env_file:
      - ../.env    
    environment:
      - NODE_ENV=production

  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./deploy/nginx:/etc/nginx/conf.d
      - ./deploy/certbot/conf:/etc/letsencrypt
      - ./deploy/certbot/www:/var/www/certbot
      - dist-share:/var/www/app-dist
    ports:
      - '80:80'
      - '443:443'
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    depends_on:
      - certbot
      - app
      - api
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./deploy/certbot/conf:/etc/letsencrypt
      - ./deploy/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  dist-share:
    driver: local

