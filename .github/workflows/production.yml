name: Production push Docker images
on:
  push:
    branches:
      - main

jobs:
  test-and-push-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.13.0]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main

        ##### BUILD TEST IMAGES #####
        # The point of this part is to make the test images separately on one run, then you can selectively comment out which images you want to rebuild or not. If you don't need to rebuild the images, it will make the subsequent test much faster

      # - uses: mr-smithers-excellent/docker-build-push@v5
      #   name: Build & push Docker image - api
      #   with:
      #     image: eduvault/eduvault_api
      #     tags: testing
      #     registry: docker.io
      #     dockerfile: api/Dockerfile_prod
      #     directory: api
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - uses: mr-smithers-excellent/docker-build-push@v5
      #   name: Build & push Docker image - app
      #   with:
      #     image: eduvault/eduvault_app
      #     tags: testing
      #     registry: docker.io
      #     dockerfile: app/Dockerfile_prod
      #     directory: app
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     buildArgs: PROD_HOST=localhost,TEST=1

      # - uses: mr-smithers-excellent/docker-build-push@v5
      #   name: Build & push Docker image - example
      #   with:
      #     image: eduvault/eduvault_example
      #     tags: testing
      #     registry: docker.io
      #     dockerfile: example/Dockerfile_prod
      #     directory: example
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     buildArgs: PROD_HOST=localhost

      # - uses: mr-smithers-excellent/docker-build-push@v5
      #   name: Build & push Docker image - home-page
      #   with:
      #     image: eduvault/eduvault_home-page
      #     tags: testing
      #     registry: docker.io
      #     dockerfile: home-page/Dockerfile_prod
      #     directory: home-page
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      ##### TEST #####

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: start app
        run: yarn build-run-ci

      - name: wait for server start
        uses: nev7n/wait_for_response@v1
        with:
          url: 'http://api.localhost/ping'
          responseCode: 200
          timeout: 180000
          interval: 3000
      - name: wait for homepage start
        uses: nev7n/wait_for_response@v1
        with:
          url: 'http://localhost:8083'
          responseCode: 200
          timeout: 180000
          interval: 3000

      - name: test
        run: |
          yarn inst:e2e
          yarn test:e2e
        env:
          TEST: 1
          TEXTILE_ORG_API_SECRET: ${{ secrets.TEXTILE_ORG_API_SECRET }}
          TEXTILE_USER_API_SECRET: ${{  secrets.TEXTILE_USER_API_SECRET }}
          PROD_HOST: localhost

      ##### TEST PASSED -- BUILD production IMAGES #####

      # - uses: mr-smithers-excellent/docker-build-push@v5
      #   name: Build & push Docker image - api
      #   with:
      #     image: eduvault/eduvault_api
      #     tags: production
      #     registry: docker.io
      #     dockerfile: api/Dockerfile_prod
      #     directory: api
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - uses: mr-smithers-excellent/docker-build-push@v5
      #   name: Build & push Docker image - app
      #   with:
      #     image: eduvault/eduvault_app
      #     tags: production
      #     registry: docker.io
      #     dockerfile: app/Dockerfile_prod
      #     directory: app
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     buildArgs: PROD_HOST=${{ secrets.PROD_HOST }}

      # - uses: mr-smithers-excellent/docker-build-push@v5
      #   name: Build & push Docker image - example
      #   with:
      #     image: eduvault/eduvault_example
      #     tags: production
      #     registry: docker.io
      #     dockerfile: example/Dockerfile_prod
      #     directory: example
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     buildArgs: PROD_HOST=${{ secrets.PROD_HOST }}

      # - uses: mr-smithers-excellent/docker-build-push@v5
      #   name: Build & push Docker image - home-page
      #   with:
      #     image: eduvault/eduvault_home-page
      #     tags: production
      #     registry: docker.io
      #     dockerfile: home-page/Dockerfile_prod
      #     directory: home-page
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
