version: '3.7'
services:
  app:
    container_name: app
    image: jewcub/eduvault_app:latest
    build:
      context: ./app
      target: prod-stage
      dockerfile: Dockerfile_prod
      args:
        - PROD_HOST=${PROD_HOST}
    env_file: ./.env
    ports:
      - ${PORT_APP}
    environment:
      - NODE_ENV=production
      - VIRTUAL_HOST=app.${PROD_HOST}
      - VIRTUAL_PORT=${PORT_APP}

  example:
    container_name: example
    image: jewcub/eduvault_example:latest
    build:
      context: ./example
      target: prod-stage
      dockerfile: Dockerfile_prod
      args:
        - PROD_HOST=${PROD_HOST}
    env_file:
      - ./.env
    ports:
      - ${PORT_EXAMPLE}
    environment:
      - NODE_ENV=production
      - VIRTUAL_HOST=example.${PROD_HOST}
      - VIRTUAL_PORT=${PORT_EXAMPLE}

  api:
    container_name: api
    image: jewcub/eduvault_api:latest
    build:
      context: ./api
      target: prod-stage
      dockerfile: Dockerfile_prod
    ports:
      - ${PORT_API}
    env_file: ./.env
    environment:
      - NODE_ENV=production
      - VIRTUAL_HOST=api.${PROD_HOST}
      - VIRTUAL_PORT=${PORT_API}

  home-page:
    container_name: home-page
    image: jewcub/eduvault_home-page:latest
    build:
      context: ./home-page
      target: prod-stage
      dockerfile: Dockerfile_prod
    ports:
      - ${PORT_HOME_PAGE}
    env_file: ./.env
    environment:
      - NODE_ENV=production
      - VIRTUAL_HOST=home.${PROD_HOST}
      - VIRTUAL_PORT=${PORT_HOME_PAGE}

  nginx:
    container_name: nginx-proxy
    # using this instead of jwilder because issue with m1 https://github.com/nginx-proxy/nginx-proxy/issues/1550#issuecomment-799705715
    image: ninanung/nginx-proxy # on mac m1
    # image: jwilder/nginx-proxy
    # restart with: docker exec -it nginx-proxy nginx -s reload
    restart: unless-stopped
    volumes:
      - ./deploy/dev-certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - app
      - api
      - example
      - home-page
    # environment:
    # Only for amazon staging
    # - SSL_POLICY=AWS-TLS-1-2-2017-01
