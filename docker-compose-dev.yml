# use docker-compose build <service-name> to just rebuild one service
version: '3.7'
services:
  app:
    container_name: app
    build:
      context: ./app
      target: dev-stage
    volumes:
      - './app:/app'
      - '/app/node_modules'
    stdin_open: true
    env_file:
      - ./.env
    expose:
      - 8081
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
      - IN_DOCKER=true
      - VIRTUAL_HOST=app.localhost
      - VIRTUAL_PORT=8081

  example:
    container_name: example
    build:
      context: ./example
      target: dev-stage
    volumes:
      - './example:/example'
      - '/example/node_modules'
    stdin_open: true
    env_file:
      - ./.env
    expose:
      - 8082
    env_file:
      - ./.env
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
      - IN_DOCKER=true
      - VIRTUAL_HOST=example.localhost
      - VIRTUAL_PORT=8082

  home-page:
    container_name: home-page
    build:
      context: ./home-page
      target: dev-stage
    volumes:
      - './home-page:/home-page'
      - '/home-page/node_modules'
    env_file:
      - ./.env
    expose:
      - 8083
    environment:
      - NODE_ENV=development
      - VIRTUAL_HOST=home.localhost,localhost
      - VIRTUAL_PORT=8083

  api:
    container_name: api
    build:
      context: ./api
      target: dev-stage
    env_file:
      - ./.env
    expose:
      - 30333
    ports:
      - '9229:9229'
    volumes:
      - './api:/api'
      - '/api/node_modules'
    environment:
      - NODE_ENV=development
      - IN_DOCKER=true
      - VIRTUAL_HOST=api.localhost
      - VIRTUAL_PORT=30333

  nginx-proxy:
    container_name: nginx-proxy
    # using this instead of jwilder because issue with m1 https://github.com/nginx-proxy/nginx-proxy/issues/1550#issuecomment-799705715
    image: ninanung/nginx-proxy # on mac m1
    # image: jwilder/nginx-proxy
    # restart with: docker exec -it nginx-proxy nginx -s reload
    restart: unless-stopped
    volumes:
      # - ./deploy/nginx/d-dev:/etc/nginx/conf.d #for custom conf file, overiding auto generated one
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./deploy/dev-certs:/etc/nginx/certs:ro
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - app
      - api
      - example
      - home-page
